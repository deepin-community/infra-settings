From 8b46993970a2e88be41fef2995c567d7e488d95f Mon Sep 17 00:00:00 2001
From: hudeng <hudeng@deepin.org>
Date: Fri, 16 Jun 2023 16:13:58 +0800
Subject: [PATCH] [src/api]: workflow build job add pending status support

---
 src/api/app/models/token/workflow.rb          | 26 +++++++++++++++++++
 src/api/app/models/workflow/step.rb           |  4 +++
 .../app/services/github_status_reporter.rb    |  2 +-
 3 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/src/api/app/models/token/workflow.rb b/src/api/app/models/token/workflow.rb
index 6a8424a972..3de5e10b16 100644
--- a/src/api/app/models/token/workflow.rb
+++ b/src/api/app/models/token/workflow.rb
@@ -45,6 +45,8 @@ class Token::Workflow < Token
     SCMStatusReporter.new(@scm_webhook.payload, @scm_webhook.payload, scm_token, workflow_run, initial_report: true).call
     @workflows.each(&:call)
     SCMStatusReporter.new(@scm_webhook.payload, @scm_webhook.payload, scm_token, workflow_run, 'success', initial_report: true).call
+    # Report build job pending when evnt is pr or mr
+    report_job_pending_status(workflow_run)
 
     # Always returning validation errors to report them back to the SCM in order to help users debug their workflows
     validation_errors
@@ -61,6 +63,30 @@ class Token::Workflow < Token
     workflow_configuration_path == '.obs/workflows.yml'
   end
 
+  def report_job_pending_status(workflow_run)
+    payload = @scm_webhook.payload.deep_symbolize_keys
+    return unless workflow_run.hook_event.in?(['pull_request', 'Merge Request Hook'])# && payload[:action] != 'closed'
+
+    @workflows.each do |workflow|
+      workflow.steps.each do |step|
+        next unless step.repositories
+
+        package = payload[:target_repository_full_name].split('/').last
+        step.repositories.each do |repository|
+          repository.fetch(:architectures, []).each do |architecture|
+            name = repository.fetch(:name, '')
+            arch = architecture
+            payload['repository'] = name
+            payload['arch'] = arch
+            payload['project'] = step.target_project_name
+            payload['package'] = package
+            SCMStatusReporter.new(payload, payload, scm_token, workflow_run, 'pending', initial_report: false).call
+          end
+        end
+      end
+    end
+  end
+
   private
 
   def validation_errors
diff --git a/src/api/app/models/workflow/step.rb b/src/api/app/models/workflow/step.rb
index f6e5ed6e12..9473d57555 100644
--- a/src/api/app/models/workflow/step.rb
+++ b/src/api/app/models/workflow/step.rb
@@ -79,6 +79,10 @@ class Workflow::Step
     end
   end
 
+  def repositories
+    step_instructions[:repositories]
+  end
+
   protected
 
   def validate_step_instructions
diff --git a/src/api/app/services/github_status_reporter.rb b/src/api/app/services/github_status_reporter.rb
index a94e2bf8ca..afdd6bba26 100644
--- a/src/api/app/services/github_status_reporter.rb
+++ b/src/api/app/services/github_status_reporter.rb
@@ -48,7 +48,7 @@ class GithubStatusReporter < SCMExceptionHandler
       { context: 'OBS SCM/CI Workflow Integration started',
         target_url: Rails.application.routes.url_helpers.token_workflow_run_url(@workflow_run.token_id, @workflow_run.id, host: Configuration.obs_url) }
     else
-      { context: "OBS: #{@event_payload[:package]} - #{@event_payload[:repository]}/#{@event_payload[:arch]}",
+      { context: "OBS: #{@event_payload[:repository]}/#{@event_payload[:arch]}",
         target_url: Rails.application.routes.url_helpers.package_show_url(@event_payload[:project], @event_payload[:package], host: Configuration.obs_url) }
     end
   end
-- 
2.20.1
