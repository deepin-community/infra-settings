# Obs Api Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: api-local
  name: api-local
  namespace: obs
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api-local
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-local
    spec:
      containers:
        - image: 'hub.deepin.com/k3s/obs/api:latest'
          imagePullPolicy: Always
          name: api-local
          ports:
            - containerPort: 31443
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/apache2/vhosts.d/obs.conf
              name: api-apache-config
              subPath: obs.conf
            - mountPath: /srv/www/obs/api/config/database.yml
              name: api-db-config
              subPath: database.yml
            - mountPath: /srv/www/obs/api/config/options.yml
              name: api-options-config
              subPath: options.yml
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: deepinhub
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: node.kubernetes.io/unschedulable
          operator: Exists
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: obs.conf
                path: obs.conf
            name: api-apache-config
          name: api-apache-config
        - configMap:
            defaultMode: 420
            items:
              - key: database.yml
                path: database.yml
            name: api-db-config
          name: api-db-config
        - configMap:
            defaultMode: 420
            items:
              - key: options.yml
                path: options.yml
            name: api-options-config
          name: api-options-config

# Obs Api Service
---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: api-local
  name: api-local
  namespace: obs
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: web
      nodePort: 32443
      port: 31443
      protocol: TCP
      targetPort: 31443
  selector:
    app: api-local
  sessionAffinity: None
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: api-local
  name: api-local
  namespace: obs
spec:
  ingressClassName: traefik
  rules:
    - host: obs.cicd.getdeepin.org
      http:
        paths:
          - backend:
              service:
                name: api-local
                port:
                  number: 31443
            path: /
            pathType: Prefix
